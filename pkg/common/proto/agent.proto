syntax = "proto3";

import "google/protobuf/timestamp.proto";

// option go_package = ".;pb";
option go_package = ".;common";

service AgentService {
    rpc PerformFantasyActions(FantasyLandscape) returns (FantasySelections) {}
}

message FantasyLandscape {
    uint32 match_number = 1;
    LeagueSettings settings = 2;
    FantasyTeam bot_team = 3;
    Bet bet = 4;
    repeated Player players = 5;
    /* TODO historical / statistical data */
    /* TODO competition lineups */
}

message Bet {
    string professional_home_team = 1;
    string professional_away_team = 2;
    Player player = 3;

    enum Type {
        OVER = 0;
        UNDER = 1;
    }

    Type type = 4;
    float points = 5;
    float price = 6;
    google.protobuf.Timestamp start_time = 7;
}

message FantasySelections {
    bool make_bet = 1;
    repeated PlayerSlot slots = 2;
}

message FantasyTeam {
    string id = 1;
    string name = 2;
    string owner = 3;
}

message LeagueSettings {
    uint32 num_teams = 1;
    repeated PlayerSlot slots_per_team = 2;
    /* scoring, budgets, etc. */
}

message PlayerSlot {
    string name = 1;
    repeated string allowed_player_positions = 2;
    string assigned_player_id = 3;
}

message Player {
    string id = 1;
    string full_name = 2;
    repeated string allowed_positions = 3;
    string professional_team = 4;
    string status = 5;
    uint32 fantasy_team_id = 6; /* 0 should be unassigned */
}

message Bot {
    string id = 1;

    enum Source {
        LOCAL = 0;
        REMOTE = 1;
    }

    Source source_type = 2;
    string source_repo_username = 3;
    string source_repo_name = 4;
    string source_path = 5;
    uint32 fantasy_team_id = 6; /* 0 should be unassigned */
}

message Simulation {
	string id = 1;
    FantasyLandscape landscape = 2;
    uint32 num_iterations = 3;
}

message GameLog {
  string season_year = 1;
  int32 player_id = 2;
  string player_name = 3;
  string nickname = 4;
  int32 team_id = 5;
  string team_abbreviation = 6;
  string team_name = 7;
  string game_id = 8;
  google.protobuf.Timestamp game_date = 9;
  string matchup = 10;
  string wl = 11;
  float min = 12;
  int32 fgm = 13;
  int32 fga = 14;
  float fg_pct = 15;
  int32 fg3m = 16;
  int32 fg3a = 17;
  float fg3_pct = 18;
  int32 ftm = 19;
  int32 fta = 20;
  float ft_pct = 21;
  int32 oreb = 22;
  int32 dreb = 23;
  int32 reb = 24;
  int32 ast = 25;
  int32 tov = 26;
  int32 stl = 27;
  int32 blk = 28;
  int32 blka = 29;
  int32 pf = 30;
  int32 pfd = 31;
  int32 pts = 32;
  int32 plus_minus = 33;
  float nba_fantasy_pts = 34;
  int32 dd2 = 35;
  int32 td3 = 36;
  float wnba_fantasy_pts = 37;
  int32 gp_rank = 38;
  int32 w_rank = 39;
  int32 l_rank = 40;
  int32 w_pct_rank = 41;
  int32 min_rank = 42;
  int32 fgm_rank = 43;
  int32 fga_rank = 44;
  int32 fg_pct_rank = 45;
  int32 fg3m_rank = 46;
  int32 fg3a_rank = 47;
  int32 fg3_pct_rank = 48;
  int32 ftm_rank = 49;
  int32 fta_rank = 50;
  int32 ft_pct_rank = 51;
  int32 oreb_rank = 52;
  int32 dreb_rank = 53;
  int32 reb_rank = 54;
  int32 ast_rank = 55;
  int32 tov_rank = 56;
  int32 stl_rank = 57;
  int32 blk_rank = 58;
  int32 blka_rank = 59;
  int32 pf_rank = 60;
  int32 pfd_rank = 61;
  int32 pts_rank = 62;
  int32 plus_minus_rank = 63;
  int32 nba_fantasy_pts_rank = 64;
  int32 dd2_rank = 65;
  int32 td3_rank = 66;
  int32 wnba_fantasy_pts_rank = 67;
  int32 available_flag = 68;
}